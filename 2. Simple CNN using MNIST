{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMqERepjbvtgFoCiEtBd9yg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"uzcW4ZIMzPsb"},"outputs":[],"source":["%pip install tensorflow"]},{"cell_type":"code","source":["import tensorflow as tf\n","import numpy as np\n","\n","# Load the MNIST dataset #x_train (60000, 28, 28) x_test (10000, 28, 28) y_train (60000,) y_test (10000,)\n","(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()\n","\n","# Normalize the input data\n","x_train = x_train / 255.0\n","x_test = x_test / 255.0\n","\n","# Reshape the input data #x_train (60000, 28, 28, 1) x_test (10000, 28, 28, 1)\n","x_train = x_train.reshape(-1, 28, 28, 1) \n","x_test = x_test.reshape(-1, 28, 28, 1)\n","\n","# Convert the labels to one-hot encoding #y_train (60000, 10) y_test (10000, 10)\n","y_train = tf.keras.utils.to_categorical(y_train, num_classes=10)\n","y_test = tf.keras.utils.to_categorical(y_test, num_classes=10)\n","\n","# Define the model\n","model = tf.keras.Sequential()\n","model.add(tf.keras.layers.Conv2D(filters=32, kernel_size=(3, 3), activation='relu', input_shape=(28, 28, 1)))\n","model.add(tf.keras.layers.MaxPooling2D(pool_size=(2, 2)))\n","model.add(tf.keras.layers.Flatten())\n","model.add(tf.keras.layers.Dense(units=128, activation='relu'))\n","model.add(tf.keras.layers.Dense(units=10, activation='softmax'))\n","\n","# Compile the model\n","model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","\n","# Train the model\n","model.fit(x_train, y_train, epochs=5, batch_size=32)\n","\n","# Evaluate the model\n","loss, accuracy = model.evaluate(x_test, y_test)\n","print(\"Test loss:\", loss)\n","print(\"Test accuracy:\", accuracy)\n","\n","#[32, 3, 3, stridex_x, strides_y, padding, 0 for 'relu', 2, 2, pool_strides_x, pool_strides_y, pool_padding, 128, 'relu & softmax']\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zzybxwFAz_6q","executionInfo":{"status":"ok","timestamp":1672696042701,"user_tz":-180,"elapsed":209351,"user":{"displayName":"Bilge Kaan Atay","userId":"14857795226492440977"}},"outputId":"43080a02-93f7-4598-a265-28a4dfca0c39"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","1875/1875 [==============================] - 42s 22ms/step - loss: 0.1447 - accuracy: 0.9574\n","Epoch 2/5\n","1875/1875 [==============================] - 41s 22ms/step - loss: 0.0512 - accuracy: 0.9844\n","Epoch 3/5\n","1875/1875 [==============================] - 42s 22ms/step - loss: 0.0311 - accuracy: 0.9899\n","Epoch 4/5\n","1875/1875 [==============================] - 41s 22ms/step - loss: 0.0203 - accuracy: 0.9936\n","Epoch 5/5\n","1875/1875 [==============================] - 40s 22ms/step - loss: 0.0148 - accuracy: 0.9953\n","313/313 [==============================] - 3s 8ms/step - loss: 0.0512 - accuracy: 0.9845\n","Test loss: 0.05115249752998352\n","Test accuracy: 0.984499990940094\n"]}]}]}